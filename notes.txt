pve-no-subscription
OEM install so that template does not have system IDs
    https://www.youtube.com/watch?v=xD9Xyt2mdSI
    apt install qemu-guest-agent
HDD passthough
    nano /etc/pve/qemu-server/100.conf
Link Aggregation
    https://www.youtube.com/watch?v=DlWXQrIhYQk
Create Tags for VLANs

https://www.youtube.com/watch?v=VAJWUZ3sTSI
    Trusted TLS Certificates
    Setup backup jobs
https://www.youtube.com/watch?v=GoZaMgEgrHw&t
    VLAN aware

# Not needed so far
- name: Gather the package facts
    ansible.builtin.package_facts:
    manager: auto

- name: Print the package facts
    ansible.builtin.debug:
    var: ansible_facts.packages

For creating a cloud-init VM
qm create 900 --memory 2048 --net0 virtio,bridge=vmbr0 --scsihw virtio-scsi-pci
qm set 900 --serial0 socket --vga serial0
qm set 900 --scsi0 local-lvm:0,import-from=/root/ubuntu.qcow2
qm set 900 --ide2 local-lvm:cloudinit
qm set 900 --boot order=scsi0

qm template 900

# This might have to come right after downloading the image
qemu-img resize ubuntu.qcow2 32G
qm importdisk 900 ubuntu.qcow2 local-lvm

qm create 501 --name "ubuntu-2204-cloudinit-template" --ostype l26 \
--memory 1024 \
--agent 1 \
--bios ovmf --machine q35 --efidisk0 local-lvm:0,pre-enrolled-keys=0 \
--cpu host --socket 1 --cores 2 \
--vga serial0 --serial0 socket \
--net0 virtio,bridge=vmbr0,firewall=1 \
--scsihw virtio-scsi-pci --scsi0 local-lvm:0,import-from=/root/ubuntu-22.04-minimal-cloudimg-amd64.qcow2,format=qcow2,ssd=1,discard=on,iothread=1 \
--ide2 local-lvm:cloudinit --boot order=scsi0 \
--sshkeys ~/.ssh/authorized_keys \
--ipconfig0 ip=dhcp \
--ciuser admin --cicustom "vendor=local:snippets/vendor.yaml"

qm create 501 --name "ubuntu-2204-cloudinit-template" --ostype l26 \
--memory 1024 \
--agent 1 \
--cpu host --socket 1 --cores 2 \
--vga serial0 --serial0 socket \
--net0 virtio,bridge=vmbr0

qm importdisk 501 ubuntu-22.04-minimal-cloudimg-amd64.qcow2 local-lvm
qm set 501 --scsihw virtio-scsi-pci --scsi0 local-lvm:vm-501-disk-0,ssd=1,discard=on
qm set 501 --boot order=scsi0
qm set 501 --ide0 local-lvm:cloudinit,media=cdrom

qm set 501 --cicustom "vendor=local:snippets/vendor.yaml"
qm set 501 --tags ubuntu-template,22.04,cloudinit
qm set 501 --ciuser ali
qm set 501 --cipassword $(openssl passwd -6 $CLEARTEXT_PASSWORD)
qm set 501 --sshkeys ~/.ssh/authorized_keys
qm set 501 --ipconfig0 ip=dhcp

qm template 501

qm create 501 --name "ubuntu-2204-cloudinit-template" --ostype l26 \
--memory 1024 \
--agent 1 \
--bios ovmf --machine q35 --efidisk0 local-lvm:0,pre-enrolled-keys=0 \
--cpu host --socket 1 --cores 2 \
--vga serial0 --serial0 socket \
--net0 virtio,bridge=vmbr0,firewall=1

qm importdisk 501 ubuntu-22.04-minimal-cloudimg-amd64.qcow2 local-lvm
qm set 501 --scsihw virtio-scsi-pci --scsi0 local-lvm:vm-501-disk-1,ssd=1,discard=on,iothread=1
qm set 501 --boot order=scsi0
qm set 501 --ide0 local-lvm:cloudinit,media=cdrom

qm set 501 --cicustom "vendor=local:snippets/vendor.yaml"
qm set 501 --tags ubuntu-template,22.04,cloudinit
qm set 501 --ciuser ali
qm set 501 --cipassword $(openssl passwd -6 $CLEARTEXT_PASSWORD)
qm set 501 --sshkeys ~/.ssh/authorized_keys
qm set 501 --ipconfig0 ip=dhcp

qm template 501

The Ultimate Create Command
qemu-img resize /root/debian-12-genericcloud-amd64-20250416-2084.qcow2 32G
qm create 520 --name "debian-bookwork-12" --ostype l26 \
--memory 2048 \
--agent 1 \
--cpu host --socket 1 --cores 2 \
--vga serial0 --serial0 socket \
--net0 virtio,bridge=vmbr0,firewall=1 \
--scsihw virtio-scsi-single --scsi0 seagate-barr-1TB:0,import-from=/root/debian-12-genericcloud-amd64-20250416-2084.qcow2,format=qcow2,ssd=1,discard=on,iothread=1 \
--ide0 local-lvm:cloudinit,media=cdrom \
--ide2 file=none,media=cdrom \
--boot order='ide2;scsi0;net0' \
--sshkeys ~/.ssh/authorized_keys \
--ipconfig0 ip=dhcp \
--ciuser ali --cicustom "vendor=local:snippets/vendor.yaml" --cipassword $(openssl passwd -6 $CLEARTEXT_PASSWORD) \
--tags workload,cloudinit